@page "/builder/list"
@using FOPS.Abstract.K8S.Entity
@using FOPS.Abstract.K8S.Server
@using FOPS.Abstract.MetaInfo.Entity
@using FOPS.Abstract.MetaInfo.Server
@using FS.Extends
@using FOPS.Abstract.Builder.Server
@using FOPS.Abstract.Builder.Entity
@using FOPS.Abstract.Builder.Enum
@using System.Timers
@inject IIocManager _iocManager;
@inject NavigationManager nav;
@inject IJSRuntime js;

<div class="layui-row layui-col-space10">
<div class="layui-col-xs6 layui-col-md8">
    <div class="layui-card">
        <div class="layui-card-header">
            构建
            <select style="display:inline;width: 200px;" @onchange="GroupChange">
                <option value="0">全部</option>
                @foreach (var clusterVO in _lstGroup)
                {
                    <option value="@clusterVO.Id">@clusterVO.Name</option>
                }
            </select>

            <select style="display:inline;width: 200px;" @onchange="ClusterChange">
                @foreach (var clusterVO in _lstCluster)
                {
                    <option value="@clusterVO.Id">@clusterVO.Name - @clusterVO.RuntimeEnvType</option>
                }
            </select>
            <div class="layui-right">
                <button class="layui-btn layui-btn-danger" @onclick="DeployAsync"><i class="am-icon-plus"></i> 全部构建</button>
            </div>
        </div>
        <div class="layui-card-body">
            <div class="layui-form layui-border-box layui-table-view" lay-filter="LAY-table-1" style="">
                <div class="layui-table-box">
                    <div class="layui-table-header">
                        <table cellspacing="0" cellpadding="0" border="0" class="layui-table" lay-skin="auto" lay-size="sm">
                            <thead>
                            <tr>
                                <th data-field="ID">
                                    <div class="layui-table-cell laytable-cell-14-0-0">
                                        <span>ID</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-1">
                                        <span>项目名称</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-2">
                                        <span>git拉取</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-3">
                                        <span>镜像版本</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-3">
                                        <span>集群版本</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-4">
                                        <span>上次成功</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-5">
                                        <span>上次失败</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-6">
                                        <span>操作</span>
                                    </div>
                                </th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="layui-table-body layui-table-main">
                        <table cellspacing="0" cellpadding="0" border="0" class="layui-table" lay-skin="auto" lay-size="sm">
                            <tbody>
                            @for (var index = 0; index < _lst.Count; index++)
                            {
                                var info = _lst[index];
                                <tr data-index="@index">
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-0"> @info.Id</div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-1">
                                            <a href="/project/update/@info.Id">@info.Name</a>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-2">
                                            <span>@((DateTime.Now - info.GitPullAt).GetDateDesc())</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-3">
                                            @info.DockerVer
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-3">
                                            @info.DicClusterVer[_clusterId].DockerVer
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-4">
                                            @if (info.DicClusterVer[_clusterId].DeploySuccessAt.Year >= 2021)
                                            {
                                                <span>@((DateTime.Now - info.DicClusterVer[_clusterId].DeploySuccessAt).GetDateDesc())</span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-5">
                                            @if (info.DicClusterVer[_clusterId].DeployFailAt.Year >= 2021)
                                            {
                                                <span>@((DateTime.Now - info.DicClusterVer[_clusterId].DeployFailAt).GetDateDesc())</span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-6">
                                            <button class="layui-btn layui-btn-sm layui-btn-danger" @onclick="() => AddBuild(info)">构建</button>
                                            <button class="layui-btn layui-btn-sm layui-btn-danger" @onclick="() => SetImages(info)">同步</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
                <PageSplit PageIndex="1" PageSize="@_pageSize" TotalCount="@_totalCount" PageUrl="/builder/list/{index}"></PageSplit>
            </div>
        </div>
    </div>
</div>
<div class="layui-col-xs6 layui-col-md4">
    <div class="layui-card">
        <div class="layui-card-header" id="anchor-play-header">
            构建队列
        </div>
        <div class="layui-card-body">
            <div class="layui-form layui-border-box layui-table-view" lay-filter="LAY-table-1">
                <div class="layui-table-box">
                    <div class="layui-table-header">
                        <table cellspacing="0" cellpadding="0" border="0" class="layui-table" lay-skin="auto" lay-size="sm">
                            <thead>
                            <tr>
                                <th data-field="ID">
                                    <div class="layui-table-cell laytable-cell-14-0-7">
                                        <span>ID</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-8">
                                        <span>项目名称</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-9">
                                        <span>状态</span>
                                    </div>
                                </th>
                                <th data-field="Type">
                                    <div class="layui-table-cell laytable-cell-14-0-10">
                                        <span>操作</span>
                                    </div>
                                </th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="layui-table-body layui-table-main">
                        <table cellspacing="0" cellpadding="0" border="0" class="layui-table" lay-skin="auto" lay-size="sm">
                            <tbody>
                            @for (var index = 0; index < _lstBuild.Count; index++)
                            {
                                var info = _lstBuild[index];
                                <tr data-index="@index">
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-7"> @info.Id</div>
                                    </td>
                                    <td>
                                        <div class="laytable-cell-14-0-8">
                                            @{
                                                var projectVO = _lst.Find(o=>o.Id==info.ProjectId);
                                                if (projectVO == null) projectVO = _iocManager.Resolve<IProjectService>().ToInfo(info.ProjectId);
                                            }
                                            <a href="/builder/log/@info.Id">@projectVO.Name</a>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-9">
                                            @{
                                                switch (info.Status)
                                                {
                                                    case EumBuildStatus.None:
                                                        <button class="layui-btn layui-btn-xs layui-btn-primary">未开始</button>
                                                        break;
                                                    case EumBuildStatus.Building:
                                                        <button class="layui-btn layui-btn-xs layui-btn-normal">构建中</button>
                                                        break;
                                                    case EumBuildStatus.Finish:
                                                        if (info.IsSuccess)
                                                        {
                                                            <button class="layui-btn layui-btn-xs">成功</button>
                                                        }
                                                        else
                                                        {
                                                            <button class="layui-btn layui-btn-xs layui-btn-danger">失败</button>
                                                        }
                                                        break;
                                                }
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="layui-table-cell laytable-cell-14-0-10">
                                            @{
                                                if (info.Status == EumBuildStatus.Building)
                                                {
                                                    <button class="layui-btn layui-btn-radius layui-btn-xs" @onclick="() => CancelBuild(info)">
                                                        <i class="layui-icon"></i>
                                                    </button>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
<style>
    .laytable-cell-14-0-0{ width: 80px; }
    .laytable-cell-14-0-1{ width: 150px; }
    .laytable-cell-14-0-2{ width: 110px; }
    .laytable-cell-14-0-3{ width: 90px; }
    .laytable-cell-14-0-4{ width: 110px; }
    .laytable-cell-14-0-5{ width: 110px; }
    .laytable-cell-14-0-6{ width: 140px; }
    .laytable-cell-14-0-7{ width: 70px; }
    .laytable-cell-14-0-8{ width: 150px; }
    .laytable-cell-14-0-9{ width: 80px; }
    .laytable-cell-14-0-10{ width: 80px; }
</style>

@code{

    private int _totalCount;
    private int _pageSize = 999;

    private List<ProjectVO> _lst = new();
    private List<YamlTplVO> _lstTpl = new();
    private List<ClusterVO> _lstCluster = new();
    private List<GitVO> _lstGit = new();
    private List<ProjectGroupVO> _lstGroup = new();
    private List<BuildVO> _lstBuild = new();
    private Timer _timer;
    private int _clusterId;
    private int _groupId;

    protected override async Task OnInitializedAsync()
    {
        _lstGroup = await _iocManager.Resolve<IProjectGroupService>().ToListAsync();
    // Git
        _lstGit = await _iocManager.Resolve<IGitService>().ToListAsync();

    // 模板
        _lstTpl = await _iocManager.Resolve<IYamlTplService>().ToListAsync();
        _lstTpl = _lstTpl.OrderByDescending(o => o.Id).ToList();

    // 集群
        _lstCluster = await _iocManager.Resolve<IClusterService>().ToListAsync();
        _lstCluster = _lstCluster.OrderByDescending(o => o.Id).ToList();
        if (_lstCluster != null) _clusterId = _lstCluster[0].Id;

        await GetList();
        
        _timer = new Timer(1000);
        _timer.Elapsed += async (sender, args) =>
        {
            _lstBuild = await _iocManager.Resolve<IBuildService>().ToBuildingList();
            // 刷新页面
            await InvokeAsync(StateHasChanged);
        };
        _timer.Enabled = true;
    }

    private async Task DeployAsync()
    {
        var load = await js.InvokeAsync<int>("layer.load", 0, "{shade: false}");
        var clusterVO = _lstCluster.Find(o => o.Id == _clusterId);
        if (clusterVO == null)
        {
            await js.InvokeVoidAsync("layer.close", load);
            await js.InvokeVoidAsync("layer.alert", "请先选择集群环境", new {icon = 0});
            return;
        }

        var deployService = _iocManager.Resolve<IDeployService>();
        try
        {
            var runShellResult = await deployService.DeployAsync(_lst, clusterVO, _lstTpl);
            if (runShellResult.IsError) await js.InvokeVoidAsync("layer.alert", runShellResult.OutputBr, new {icon = 2, title = "出错了"});
            else await js.InvokeVoidAsync("layer.alert", runShellResult.OutputBr, new {icon = 1, title = "执行结果"});
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("layer.alert", e.Message, new {icon = 2, title = "出错了"});
        }
        await js.InvokeVoidAsync("layer.close", load);
    }

    private async Task ClusterChange(ChangeEventArgs args)
    {
        _clusterId = args.Value.ConvertType(0);
        await GetList();
    }

    private async Task GroupChange(ChangeEventArgs args)
    {
        _groupId = args.Value.ConvertType(0);
        await GetList();
    }

    private async Task GetList()
    {
    // 重新读取所有项目列表
        _lst = await _iocManager.Resolve<IProjectService>().ToListAsync();

    // 如果项目组不包含当前选中的组，则移除项目
        if (_groupId > 0)
        {
            _lst.RemoveAll(o => o.GroupId != _groupId);
        }

    // 遍历项目组ID
        var projectGroupIds = _lst.Select(o => o.GroupId).ToList();
        for (var i = 0; i < projectGroupIds.Count; i++)
        {
            var projectGroupId = projectGroupIds[i];
            var info = await _iocManager.Resolve<IProjectGroupService>().ToInfoAsync(projectGroupId);

    // 如果项目组不包含当前选中的集群，则移除项目
            if (!info.ClusterIds.Contains(_clusterId))
                _lst.RemoveAll(o => o.GroupId == projectGroupId);
        }

        _lst = _lst.OrderByDescending(o => o.Id).ToList();
        _totalCount = _lst.Count;


        for (var index = 0; index < _lst.Count; index++)
        {
            var projectVO = _lst[index];
            var gitVO = _lstGit.Find(o => o.Id == projectVO.GitId);
            if (gitVO == null) continue;
            projectVO.GitId = gitVO.Id;
            projectVO.GitPullAt = gitVO.PullAt;
            projectVO.GitName = gitVO.Name;
            projectVO.GitHub = gitVO.Hub;

            if (!projectVO.DicClusterVer.ContainsKey(_clusterId))
                projectVO.DicClusterVer[_clusterId] = new ClusterVer {DockerVer = "0"};
        }

        _lstBuild = await _iocManager.Resolve<IBuildService>().ToBuildingList();
    }

    private async Task AddBuild(ProjectVO project)
    {
        var load = await js.InvokeAsync<int>("layer.load", 0, "{shade: false}");
        try
        {
            await _iocManager.Resolve<IBuildService>().Add(project.Id, _clusterId);
            await GetList();
            await js.InvokeVoidAsync("layer.alert", "已加入到队列", new {icon = 1, title = "执行结果"});
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("layer.alert", e.Message, new {icon = 2, title = "加入失败"});
        }
        await js.InvokeVoidAsync("layer.close", load);
    }

    /// 更新集群镜像版本
    private async Task SetImages(ProjectVO project)
    {
        var load = await js.InvokeAsync<int>("layer.load", 0, "{shade: false}");
        try
        {
            var runShellResult = await _iocManager.Resolve<IKubectlOpr>().SetImages(_clusterId, project.DockerVer, project, null);
            await GetList();
            if (runShellResult.IsError) await js.InvokeVoidAsync("layer.alert", runShellResult.OutputBr, new {icon = 2, title = "出错了"});
            else
            {
                await _iocManager.Resolve<IBuildService>().Success(_clusterId, project);
                await js.InvokeVoidAsync("layer.alert", runShellResult.OutputBr, new {icon = 1, title = "执行结果"});
            }
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("layer.alert", e.Message, new {icon = 2, title = "加入失败"});
        }
        await js.InvokeVoidAsync("layer.close", load);
    }

    private async Task CancelBuild(BuildVO info)
    {
        await _iocManager.Resolve<IBuildService>().Cancel(info.Id);
        await GetList();
    }
}