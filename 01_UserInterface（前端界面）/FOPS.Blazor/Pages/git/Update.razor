@page "/git/update/{id:int}"
@using FOPS.Abstract.MetaInfo.Entity
@using FOPS.Abstract.MetaInfo.Server
@using Microsoft.AspNetCore.Components
@inject IIocManager _iocManager;
@inject NavigationManager nav;
@inject IJSRuntime js;

<div class="layui-card">
    <div class="layui-card-header">
        编辑GIT
        <div class="layui-right">
            <button class="layui-btn" @onclick="GotoList"><i class="am-icon-plus"></i> 列表</button>
        </div>
    </div>
    <div class="layui-card-body" style="padding: 15px;">
        <div class="layui-form-item">
            <label class="layui-form-label">ID</label>
            <div class="layui-input-inline">
                <label class="layui-form-label" style="text-align: left">@_info.Id</label>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">Git名称</label>
            <div class="layui-input-block">
                <input type="text" @bind="_info.Name" autocomplete="off" placeholder="请输入Git名称" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">托管地址</label>
            <div class="layui-input-block">
                <input type="text" @bind="_info.Hub" autocomplete="off" placeholder="请输入托管地址" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">Git账户名称</label>
            <div class="layui-input-inline">
                <input type="text" @bind="_info.UserName" placeholder="请输入Git账户名称" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux">如没有，则留空</div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">Git账户密码</label>
            <div class="layui-input-inline">
                <input type="text" @bind="_info.UserPwd" placeholder="请输入Git账户密码" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux">如没有，则留空</div>
        </div>
        <div class="layui-form-item layui-layout-admin">
            <div class="layui-input-block">
                <div class="layui-footer" style="left: 0;">
                    <button class="layui-btn" @onclick="UpdateInfo">保存</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code{

    [Parameter] public int Id { get; set; }

    private GitVO _info = new() {};

    private async Task UpdateInfo()
    {
        if (Id < 1 || _info == null)
        {
            await js.InvokeVoidAsync("layer.alert", "Git仓库不存在", new {icon = 2, title = "出错了"});
            nav.NavigateTo($"/git/list");
        }
        try
        {
            await _iocManager.Resolve<IGitService>().UpdateAsync(Id, _info);
            await js.InvokeVoidAsync("layer.alert", "修改成功", new {icon = 1});
            nav.NavigateTo($"/git/update/{_info.Id}");
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("layer.alert", e.Message, new {icon = 2, title = "出错了"});
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Id < 1 || _info == null)
        {
            await js.InvokeVoidAsync("layer.alert", "Git仓库不存在", new {icon = 2, title = "出错了"});
            nav.NavigateTo($"/git/list");
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0 && _info.Id == 0)
        {
            _info = await _iocManager.Resolve<IGitService>().ToInfoAsync(Id);
            if (_info == null)
            {
                await js.InvokeVoidAsync("layer.alert", "Git仓库不存在", new {icon = 2, title = "出错了"});
                nav.NavigateTo($"/git/list");
            }
        }
    }

    private void GotoList()
    {
        nav.NavigateTo("/git/list");
    }

}