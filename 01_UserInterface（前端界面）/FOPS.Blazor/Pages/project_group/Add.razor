@page "/project_group/add"
@using FOPS.Abstract.MetaInfo.Entity
@using FOPS.Abstract.MetaInfo.Server
@using Microsoft.AspNetCore.Components
@using FOPS.Abstract.K8S.Entity
@inject IIocManager _iocManager;
@inject NavigationManager nav;
@inject IJSRuntime js;

<div class="layui-card">
    <div class="layui-card-header">
        添加项目
        <div class="layui-right">
            <button class="layui-btn" @onclick="GotoList"><i class="am-icon-plus"></i> 列表</button>
        </div>
    </div>
    <div class="layui-card-body" style="padding: 15px;">
        <div class="layui-form-item">
            <label class="layui-form-label">集群</label>
            <div class="layui-input-block">
                <select @bind="_info.ClusterId">
                    @foreach (var clusterVO in _lstCluster)
                    {
                        <option value="@clusterVO.Id">[@clusterVO.RuntimeEnvType.ToString()] @clusterVO.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">项目组名称</label>
            <div class="layui-input-block">
                <input type="text" @bind="_info.Name" autocomplete="off" placeholder="请输入项目组名称" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item layui-layout-admin">
            <div class="layui-input-block">
                <div class="layui-footer" style="left: 0;">
                    <button class="layui-btn" @onclick="AddInfo">添加</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code{

    private readonly ProjectGroupVO _info = new() {};
    private List<ClusterVO> _lstCluster = new();

    protected override async Task OnInitializedAsync()
    {
        _lstCluster = await _iocManager.Resolve<IClusterService>().ToListAsync();
    }

    private async Task AddInfo()
    {
        try
        {
            if (_info.Name == null || _info.ClusterId == 0)
            {
                await js.InvokeVoidAsync("layer.alert", "项目组、集群必须填写.", new {icon = 2, title = "出错了"});
            }

            await _iocManager.Resolve<IProjectGroupService>().AddAsync(_info);
            await js.InvokeVoidAsync("layer.alert", "添加成功", new {icon = 1});
            nav.NavigateTo("/project_group/list");
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("layer.alert", e.Message, new {icon = 2, title = "出错了"});
        }
    }

    private void GotoList()
    {
        nav.NavigateTo("/project_group/list");
    }

}